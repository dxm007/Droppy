- cleanup DragHelper class and mouse capture.  Class needs to allow the client to specify whether or 
  not there is a child control that captures the mouse, if there is one, then it shouldn't do any
  capture.
- Fix shading of pressed state of folder button
- make "Add Item..." a button
- launch windows explorer when a folder is clicked
- copy files into the folder when they are dragged onto a folder site
- ability to size the window
- move folders by dragging when there are multiple columns
- header bar needs controls:
	- close button
	- minimize button
	- global commands:
		* export data
		* import data
- ability to dock the window to top, left or right edge of the screen
- when window not docked, it should be possible to minimize it
- when window is docked, it should disappear from the taskbar and make itself topmost
- ability to minimize the window (animate between minimum and normal size)
- ability to hide the window (add hot key to bring it back)
- when a second instance is launched, it should make the first one appear and exit
- add a context menu, allow users to copy/move files via the context menu "Paste" command
- create an icon for the application
- implement profiles. Each profile defines set of folders/files to show in the UI.  User should
  be able to define multiple profiles and easily switch between them.
  



Completed:
- implement export/import to xml
- persist application settings
- clear folders from sites
- ability to move the window
- assign folders to empty sites
- ability to rearrange folders by dragging
- figure out how much of the folder path should be displayed in the UI.  The rest should
  be trimmed






Notes:

Button template must respond to ....
IsMouseOver
IsPressed
IsDefaulted
IsKeyboardFocused
ToggleButton.IsChecked
IsEnabled

widget grid buttons only need to respond to ...
IsMouseOver
IsPressed

