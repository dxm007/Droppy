- create an icon for the application
- research open source license to use
- add about dialog
- Spend some time cleaning up code, maybe a little refactoring, definitely add a whole bunch of
  comments to a whole bunch of places
----------------------------------------------------------------------------------------------
- disabled menu items are a bit too difficult to see.  Can their visibility be improved
- explore the possibility of dragging a folder button into a text field and have that field be
  automatically populated with the folder path
- Add "Copy Full Path" to folder button context menu
- Add a toolbar button to pin/unpin docked window so that it doesn't get automatically hidden.
- ability to hide the window (add hot key to bring it back)
- On exit, the app should remember its dock state and then return to it when it is restarted
- in addition to folders, ability to add shortcuts
	- shortcuts should use whatever icon associated with the shortcut in windows
- add record/playback of file operations
- implement container widgets which bring up a popup with child widget matrix control
- implement profiles. Each profile defines set of folders/files to show in the UI.  User should
  be able to define multiple profiles and easily switch between them.
- Create a second skin where each folder button doesn't take up as much room, maybe put text
  under the icons and make each button more square
- add ability to reskin the UI through a settings dialog box.
- Exported files should include whatever skin information needed in order to restore same
  look and feel on a different machine
- Allow folder paths to contain macros/environment variables so that on different windows
  versions the paths will point to different physical folders
- investigate if we can replace dragged adorner with a custom cursor that includes the image
  of the widget being dragged



Completed:
- Add ability to set custom names/labels on items
- folder should have a tool tip which displays full path when mouse is hovering over
- add a context menu, allow users to copy/move files via the context menu "Paste" command
- when a second instance is launched, it should make the first one appear and exit
- Window docker shouldn't allow docking to edge of the screen occuppied by an appbar (taskbar).
- Window docker should listen for resolution change events
- Window docker should handle cases where we go from 2 headed machine to remote login which appears
  single headed.
- Change the way WindowDocker determines desktop boundaries. Especially pay attention to multiheaded
  machines where each screen has a different resolution.
- ability to dock the window to top, left or right edge of the screen
	- Add coordinator object between window docker and window auto hider so that when
	  the window is docked, auto hider is automatically enabled
	- when window is docked, it should disappear from the taskbar and make itself topmost
	- Change the way we detect mouse location because current method doesn't get invoked
	  when a folder is being dragged from windows explorer
	- The mouse is considered outside the application window when
		a) a folder button is dragged
		b) mouse is over the context menu popup
		c) When a "add item" button is clicked- clicking empty folder should bring up a folder selection dialog box
- clicking empty folder should bring up a folder selection dialog box		
- see if context menu can be custom drawn instead of windows standard one
- hookup export data button
- hookup import data button
- header bar needs controls:
	- close button
	- tools menu:
		* export data
		* import data
- Bug: When window is resized from the left, cells on the right side end up being animated
- investigate the use of StyleCop
- animate the buttons that are created/destroyed during resize
- there's a bug in calculating minimum window size so that widgets wouldn't get deleted
- move folders by dragging when there are multiple columns
- ability to size the window
	- widget matrix and site controls need to support columns which start with non-zero index
	- window should not allow to resize lower if that will result in data deletion
- cleanup DragHelper class and mouse capture.  Class needs to allow the client to specify whether or 
  not there is a child control that captures the mouse, if there is one, then it shouldn't do any
  capture.
- copy files into the folder when they are dragged onto a folder site
- launch windows explorer when a folder is clicked
- Fix shading of pressed state of folder button
- make "Add Item..." a button
- implement export/import to xml
- persist application settings
- clear folders from sites
- ability to move the window
- assign folders to empty sites
- ability to rearrange folders by dragging
- figure out how much of the folder path should be displayed in the UI.  The rest should
  be trimmed

